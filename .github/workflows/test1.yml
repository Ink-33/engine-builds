name: Flutter Engine

on:
  schedule:
    - cron: 30 */3 * * *

jobs:
  linux:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        config:
          - tag: android_debug_unopt
            gn: --embedder-for-target --runtime-mode=debug --unoptimized --android
          - tag: android_debug_unopt_arm64
            gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=arm64
          - tag: android_debug_unopt_x86
            gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=x86
          - tag: android_debug_unopt_x64
            gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=x64
          - tag: host_debug_unopt
            gn: --embedder-for-target --runtime-mode=debug --unoptimized

          - tag: android_profile
            gn: --embedder-for-target --runtime-mode profile --lto --android
          - tag: android_profile_arm64
            gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=arm64
          - tag: android_profile_x86
            gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=x86
          - tag: android_profile_x64
            gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=x64
          - tag: host_profile
            gn: --embedder-for-target --runtime-mode profile --lto

          - tag: android_release
            gn: --embedder-for-target --runtime-mode release --lto --stripped --android
          - tag: android_release_arm64
            gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=arm64
          - tag: android_release_x86
            gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=x86
          - tag: android_release_x64
            gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=x64
          - tag: host_release
            gn: --embedder-for-target --runtime-mode release --lto --stripped
    steps:
      - uses: actions/checkout@v1
      - name: Get engine version
        id: get_engine_version
        run: |
          value=`curl https://raw.githubusercontent.com/flutter/flutter/master/bin/internal/engine.version`
          echo ::set-output name=engine_version::$value
      - name: Check release
        id: release_check
        run: |
          content=`curl https://api.github.com/repos/flutter-rs/engine-builds/releases/tags/${{ format('f-{0}-linux_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}`
          echo $content
          status=`curl -s -o /dev/null -w '%{http_code}' https://api.github.com/repos/flutter-rs/engine-builds/releases/tags/${{ format('f-{0}-linux_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}`
          echo $status
          if [ $status == "200" ]
          then
            echo Skipping build
            echo ::set-output name=missing::false
          else
            echo Building
            echo ::set-output name=missing::true
          fi
      - name: Download
        if: steps.release_check.outputs.missing == 'true'
        run: ./linux-download.sh
      - name: Patch
        if: steps.release_check.outputs.missing == 'true'
        run: |
          cp main.gn engine/src/flutter/BUILD.gn
          cp embedder.gn engine/src/flutter/shell/platform/embedder/BUILD.gn
          cp embedder_exports.lst engine/src/flutter/shell/platform/embedder/embedder_exports.lst
      - name: Dart
        if: steps.release_check.outputs.missing == 'true'
        run: ./linux-dart.sh
      - name: Generate config
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('./linux-gn.sh "{0}"', matrix.config.gn) }}
      - name: Build
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('./linux-build.sh {0}', matrix.config.tag) }}
      - name: Print tree
        if: steps.release_check.outputs.missing == 'true'
        run: tree ./engine_out/
      - name: Upload artifact
        if: steps.release_check.outputs.missing == 'true'
        uses: actions/upload-artifact@v1
        with:
          name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
          path: engine_out
      - name: Create release zip
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('cd engine_out && zip -qq -r ../{0}.zip ./*', matrix.config.tag) }}
      - name: Create release
        if: steps.release_check.outputs.missing == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('f-{0}-linux_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}
          release_name: ${{ format('Flutter {0} (linux_x64, {1})', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}
          draft: false
          prerelease: false
      - name: Upload release asset
        if: steps.release_check.outputs.missing == 'true'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ format('./{0}.zip', matrix.config.tag) }}
          asset_name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
          asset_content_type: application/octet-stream

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        config:
          - tag: host_debug_unopt
            gn: --embedder-for-target --runtime-mode=debug --unoptimized
          - tag: host_profile
            gn: --embedder-for-target --runtime-mode profile --lto
          - tag: host_release
            gn: --embedder-for-target --runtime-mode release --lto --stripped
    steps:
      - uses: actions/checkout@v1
      - name: Get engine version
        id: get_engine_version
        run: |
          value=`curl https://raw.githubusercontent.com/flutter/flutter/master/bin/internal/engine.version`
          echo ::set-output name=engine_version::$value
      - name: Check release
        id: release_check
        run: |
          content=`curl https://api.github.com/repos/flutter-rs/engine-builds/releases/tags/${{ format('f-{0}-macosx_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}`
          echo $content
          status=`curl -s -o /dev/null -w '%{http_code}' https://api.github.com/repos/flutter-rs/engine-builds/releases/tags/${{ format('f-{0}-macosx_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}`
          echo $status
          if [ $status == "200" ]
          then
            echo Skipping build
            echo ::set-output name=missing::false
          else
            echo Building
            echo ::set-output name=missing::true
          fi
      - name: Dependencies
        if: steps.release_check.outputs.missing == 'true'
        run: ./macos-dev-dependencies.sh
      - name: Download
        if: steps.release_check.outputs.missing == 'true'
        run: ./macos-download.sh
      - name: Patch
        if: steps.release_check.outputs.missing == 'true'
        run: |
          cp main.gn engine/src/flutter/BUILD.gn
          cp embedder.gn engine/src/flutter/shell/platform/embedder/BUILD.gn
          cp embedder_exports.lst engine/src/flutter/shell/platform/embedder/embedder_exports.lst
      - name: Dart
        if: steps.release_check.outputs.missing == 'true'
        run: ./linux-dart.sh
      - name: Generate config
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('./linux-gn.sh "{0}"', matrix.config.gn) }}
      - name: Build
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('./macos-build.sh {0}', matrix.config.tag) }}
      - name: Print tree
        if: steps.release_check.outputs.missing == 'true'
        run: tree ./engine_out/
      - name: Uploading artifacts
        if: steps.release_check.outputs.missing == 'true'
        uses: actions/upload-artifact@v1
        with:
          name: ${{ format('engine-macosx_x64-{0}', matrix.config.tag) }}
          path: engine_out
      - name: Create release zip
        if: steps.release_check.outputs.missing == 'true'
        run: ${{ format('cd engine_out && zip -qq -r ../{0}.zip ./*', matrix.config.tag) }}
      - name: Create release
        if: steps.release_check.outputs.missing == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('f-{0}-macosx_x64-{1}', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}
          release_name: ${{ format('Flutter {0} (macosx_x64, {1})', steps.get_engine_version.outputs.engine_version, matrix.config.tag) }}
          draft: false
          prerelease: false
      - name: Upload release asset
        if: steps.release_check.outputs.missing == 'true'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ format('./{0}.zip', matrix.config.tag) }}
          asset_name: ${{ format('engine-macosx_x64-{0}', matrix.config.tag) }}
          asset_content_type: application/octet-stream
