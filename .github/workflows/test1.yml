name: Flutter Engine

on: [push]

jobs:
  create-release:
    name: Release
    runs-on: ubuntu-16.04
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          repository: 'flutter/engine'
          path: 'engine'
      - name: Get flutter version
        id: get_flutter_info
        run: |
          value=`git -C ./engine/ rev-parse HEAD`
          echo ::set-output name=flutter_version::$value
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('f_{0}', steps.get_flutter_info.outputs.flutter_version) }} 
          release_name: Flutter ${{ steps.get_flutter_info.outputs.flutter_version }}
          draft: false
          prerelease: false
      - name: Store release url
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Upload release url
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  linux:
    runs-on: ubuntu-16.04
    needs: [ create-release ]
    strategy:
      matrix:
        config:
        - tag: android_debug_unopt
          gn: --embedder-for-target --runtime-mode=debug --unoptimized --android
        - tag: android_debug_unopt_arm64
          gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=arm64
        - tag: android_debug_unopt_x86
          gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=x86
        - tag: android_debug_unopt_x64
          gn: --embedder-for-target --runtime-mode=debug --unoptimized --android --android-cpu=x64
        - tag: host_debug_unopt
          gn: --embedder-for-target --runtime-mode=debug --unoptimized

        - tag: android_profile
          gn: --embedder-for-target --runtime-mode profile --lto --android
        - tag: android_profile_arm64
          gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=arm64
        - tag: android_profile_x86
          gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=x86
        - tag: android_profile_x64
          gn: --embedder-for-target --runtime-mode profile --lto --android --android-cpu=x64
        - tag: host_profile
          gn: --embedder-for-target --runtime-mode profile --lto

        - tag: android_release
          gn: --embedder-for-target --runtime-mode release --lto --stripped --android
        - tag: android_release_arm64
          gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=arm64
        - tag: android_release_x86
          gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=x86
        - tag: android_release_x64
          gn: --embedder-for-target --runtime-mode release --lto --stripped --android --android-cpu=x64
        - tag: host_release
          gn: --embedder-for-target --runtime-mode release --lto --stripped
    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v1
    - name: Download
      run: ./linux-download.sh
    - name: Patch
      run: |
        cp main.gn engine/src/flutter/BUILD.gn
        cp embedder.gn engine/src/flutter/shell/platform/embedder/BUILD.gn
        cp embedder_exports.lst engine/src/flutter/shell/platform/embedder/embedder_exports.lst
    - name: Dart
      run: ./linux-dart.sh
    - name: Generate configs
      run: ${{ format('./linux-gn.sh "{0}"', matrix.config.gn) }}
    - name: Build
      run: ${{ format('./linux-build.sh {0}', matrix.config.tag) }}
    - name: Print tree
      run: tree ./
    - name: Uploading artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
        path: engine_out
    - name: Create release zip
      run: ${{ format('zip -qq -r ./{0}.zip ./engine_out/*', matrix.config.tag) }}
    - name: Load release url
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get release url
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
        asset_path: ${{ format('./{0}.zip', matrix.config.tag) }}
        asset_name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
        asset_content_type: application/octet-stream
||||||| parent of 941c24d... Install dependencies
      - uses: actions/checkout@v1
      - name: Load engine version
        uses: actions/download-artifact@v1
        with:
          name: engine_version
      - name: Get engine version
        id: get_engine_version
        run: |
          value=`cat engine_version/engine_version.txt`
          echo ::set-output name=engine_version::$value
      - name: Download
        run: ./macos-download.sh
      - name: Patch
        run: |
          cp main.gn engine/src/flutter/BUILD.gn
          cp embedder.gn engine/src/flutter/shell/platform/embedder/BUILD.gn
          cp embedder_exports.lst engine/src/flutter/shell/platform/embedder/embedder_exports.lst
      - name: Dart
        run: ./linux-dart.sh
      - name: Generate configs
        run: ${{ format('./linux-gn.sh "{0}"', matrix.config.gn) }}
      - name: Build
        run: ${{ format('./linux-build.sh {0}', matrix.config.tag) }}
      - name: Print tree
        run: tree ./
      - name: Uploading artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
          path: engine_out
      - name: Create release zip
        run: ${{ format('zip -qq -r ./{0}.zip ./engine_out/*', matrix.config.tag) }}
=======
      - uses: actions/checkout@v1
      - name: Load engine version
        uses: actions/download-artifact@v1
        with:
          name: engine_version
      - name: Get engine version
        id: get_engine_version
        run: |
          value=`cat engine_version/engine_version.txt`
          echo ::set-output name=engine_version::$value
      - name: Dev dependencies
        run: ./macos-dev-dependencies.sh
      - name: Download
        run: ./macos-download.sh
      - name: Patch
        run: |
          cp main.gn engine/src/flutter/BUILD.gn
          cp embedder.gn engine/src/flutter/shell/platform/embedder/BUILD.gn
          cp embedder_exports.lst engine/src/flutter/shell/platform/embedder/embedder_exports.lst
      - name: Dart
        run: ./linux-dart.sh
      - name: Generate configs
        run: ${{ format('./linux-gn.sh "{0}"', matrix.config.gn) }}
      - name: Build
        run: ${{ format('./linux-build.sh {0}', matrix.config.tag) }}
      - name: Print tree
        run: tree ./
      - name: Uploading artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ format('engine-linux_x64-{0}', matrix.config.tag) }}
          path: engine_out
      - name: Create release zip
        run: ${{ format('zip -qq -r ./{0}.zip ./engine_out/*', matrix.config.tag) }}
>>>>>>> 941c24d... Install dependencies
